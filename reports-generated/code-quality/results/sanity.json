{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot access 'Serializable': it is internal in 'kotlin.io'",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "class",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 45,
      "offset": 1,
      "length": 12,
      "code": {
        "startLine": 43,
        "length": 12,
        "offset": 76,
        "surroundingCode": "): NetworkEither<F, S> = alsoPrettyPrint(tag, serializer(), serializer())\n\n@Serializable\ninternal data class Response<T>(val body: T, val code: Int, val headers: Map<String, List<String>>)\n\nprivate const val LocalError = \"Internet not available\""
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-3066762038070153395"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "This class does not have a constructor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "class",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 45,
      "offset": 1,
      "length": 12,
      "code": {
        "startLine": 43,
        "length": 12,
        "offset": 76,
        "surroundingCode": "): NetworkEither<F, S> = alsoPrettyPrint(tag, serializer(), serializer())\n\n@Serializable\ninternal data class Response<T>(val body: T, val code: Int, val headers: Map<String, List<String>>)\n\nprivate const val LocalError = \"Internet not available\""
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "3716230639017329747"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: KSerializer",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 23,
      "length": 11,
      "code": {
        "startLine": 14,
        "length": 11,
        "offset": 113,
        "surroundingCode": "public fun <F, S> NetworkEither<F, S>.alsoPrettyPrint(\n    tag: String = \"NetworkEither\",\n    failureSerializer: KSerializer<F>,\n    successSerializer: KSerializer<S>,\n): NetworkEither<F, S> {"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-2393068979111518722"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: KSerializer",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 23,
      "length": 11,
      "code": {
        "startLine": 15,
        "length": 11,
        "offset": 97,
        "surroundingCode": "    tag: String = \"NetworkEither\",\n    failureSerializer: KSerializer<F>,\n    successSerializer: KSerializer<S>,\n): NetworkEither<F, S> {\n    fold("
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-2993731589725170815"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: run",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/utils/IsNetworkAvailable.kt",
      "language": "kotlin",
      "line": 4,
      "offset": 20,
      "length": 3,
      "code": {
        "startLine": 2,
        "length": 3,
        "offset": 75,
        "surroundingCode": "\nimport com.javiersc.either.network.internal.Constants\nimport com.javiersc.run.blocking.runBlocking\nimport io.ktor.client.HttpClient\nimport io.ktor.client.request.head"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-3647532515399461535"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/utils/IsNetworkAvailable.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 3,
        "length": 4,
        "offset": 109,
        "surroundingCode": "import com.javiersc.either.network.internal.Constants\nimport com.javiersc.run.blocking.runBlocking\nimport io.ktor.client.HttpClient\nimport io.ktor.client.request.head\n"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-7550210262530931055"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/utils/IsNetworkAvailable.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 4,
        "length": 4,
        "offset": 88,
        "surroundingCode": "import com.javiersc.run.blocking.runBlocking\nimport io.ktor.client.HttpClient\nimport io.ktor.client.request.head\n\npublic val isNetworkAvailable: Boolean"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "6608757324229966264"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: runBlocking",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/utils/IsNetworkAvailable.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 12,
      "length": 11,
      "code": {
        "startLine": 7,
        "length": 11,
        "offset": 52,
        "surroundingCode": "\npublic val isNetworkAvailable: Boolean\n    get() = runBlocking { runCatching { httpClient.head<String>(Constants.DnsUrl) }.isSuccess }\n\nprivate val httpClient = HttpClient()"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "6841554294314254763"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: Headers",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 26,
      "length": 7,
      "code": {
        "startLine": 10,
        "length": 7,
        "offset": 41,
        "surroundingCode": "\n@PublishedApi\ninternal val emptyHeader: Headers\n    get() = headersOf(\"Content-Length\", listOf(\"0\"))"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6457616709410067783"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: headersOf",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 12,
      "length": 9,
      "code": {
        "startLine": 11,
        "length": 9,
        "offset": 60,
        "surroundingCode": "@PublishedApi\ninternal val emptyHeader: Headers\n    get() = headersOf(\"Content-Length\", listOf(\"0\"))"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6454699955657868423"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: HttpStatusCode",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 58,
      "length": 14,
      "code": {
        "startLine": 5,
        "length": 14,
        "offset": 89,
        "surroundingCode": "import io.ktor.http.headersOf\n\ninternal infix fun Int.toHttpStatusCode(message: String): HttpStatusCode {\n    return HttpStatusCode.allStatusCodes.find { it.value == this } ?: HttpStatusCode(this, message)\n}"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-8172723945750409002"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: HttpStatusCode",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 11,
      "length": 14,
      "code": {
        "startLine": 6,
        "length": 14,
        "offset": 87,
        "surroundingCode": "\ninternal infix fun Int.toHttpStatusCode(message: String): HttpStatusCode {\n    return HttpStatusCode.allStatusCodes.find { it.value == this } ?: HttpStatusCode(this, message)\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8323432355318184392"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "field",
      "path": "projects/network/network-core/jvmTest/kotlin/TestUtils.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 9,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 33,
        "surroundingCode": "import okio.FileSystem\n\ninternal actual val fileSystem: FileSystem = FileSystem.SYSTEM"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.jvmTest",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-8685220619281713083"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: SerializationException",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/internal/ExceptionExtensions.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 13,
      "length": 22,
      "code": {
        "startLine": 3,
        "length": 22,
        "offset": 66,
        "surroundingCode": "import kotlinx.serialization.SerializationException\n\ninternal val SerializationException.hasBody: Boolean\n    get() = !this.message?.substringAfter(\"JSON input:\").isNullOrBlank()"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-147655061067530173"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: SerializationException",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/internal/ExceptionExtensions.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 29,
      "length": 22,
      "code": {
        "startLine": 1,
        "length": 22,
        "offset": 75,
        "surroundingCode": "package com.javiersc.either.network.internal\n\nimport kotlinx.serialization.SerializationException\n\ninternal val SerializationException.hasBody: Boolean\n    get() = !this.message?.substringAfter(\"JSON input:\").isNullOrBlank()"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8384731817301574796"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 11,
        "length": 4,
        "offset": 125,
        "surroundingCode": "import com.javiersc.either.network.buildNetworkSuccess\nimport com.javiersc.either.network.utils.isNetworkAvailable\nimport io.ktor.client.HttpClient\nimport io.ktor.client.call.receive\nimport io.ktor.client.features.ResponseException"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-3250362051306848840"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 12,
        "length": 4,
        "offset": 103,
        "surroundingCode": "import com.javiersc.either.network.utils.isNetworkAvailable\nimport io.ktor.client.HttpClient\nimport io.ktor.client.call.receive\nimport io.ktor.client.features.ResponseException\nimport io.ktor.client.features.feature"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8826268602542111465"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 13,
        "length": 4,
        "offset": 78,
        "surroundingCode": "import io.ktor.client.HttpClient\nimport io.ktor.client.call.receive\nimport io.ktor.client.features.ResponseException\nimport io.ktor.client.features.feature\nimport io.ktor.client.features.json.JsonFeature"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "7131527132518812813"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 14,
        "length": 4,
        "offset": 94,
        "surroundingCode": "import io.ktor.client.call.receive\nimport io.ktor.client.features.ResponseException\nimport io.ktor.client.features.feature\nimport io.ktor.client.features.json.JsonFeature\nimport io.ktor.client.features.json.JsonSerializer"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2466121749203045707"
}]}