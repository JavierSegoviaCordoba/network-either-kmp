{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 1,
        "length": 4,
        "offset": 52,
        "surroundingCode": "package com.javiersc.either.network.ktor\n\nimport io.ktor.http.Headers\nimport io.ktor.http.HttpStatusCode\nimport io.ktor.http.headersOf"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "309897703414184503"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 4,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 2,
        "length": 4,
        "offset": 39,
        "surroundingCode": "\nimport io.ktor.http.Headers\nimport io.ktor.http.HttpStatusCode\nimport io.ktor.http.headersOf\n"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "958317060643530766"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: ktor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 10,
      "length": 4,
      "code": {
        "startLine": 3,
        "length": 4,
        "offset": 73,
        "surroundingCode": "import io.ktor.http.Headers\nimport io.ktor.http.HttpStatusCode\nimport io.ktor.http.headersOf\n\ninternal infix fun Int.toHttpStatusCode(message: String): HttpStatusCode {"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-8377473031687709671"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: Headers",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/HttpStatusCodeExtensions.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 26,
      "length": 7,
      "code": {
        "startLine": 10,
        "length": 7,
        "offset": 41,
        "surroundingCode": "\n@PublishedApi\ninternal val emptyHeader: Headers\n    get() = headersOf(\"Content-Length\", listOf(\"0\"))"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6457616709410067783"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: HttpClient",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 17,
      "length": 10,
      "code": {
        "startLine": 29,
        "length": 10,
        "offset": 88,
        "surroundingCode": "\n    public suspend inline operator fun <reified F, reified S> invoke(\n        request: HttpClient.() -> HttpResponse\n    ): NetworkEither<F, S> {\n        val jsonFeature: JsonFeature ="
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2276497980731044472"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: HttpResponse",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 34,
      "length": 12,
      "code": {
        "startLine": 29,
        "length": 12,
        "offset": 105,
        "surroundingCode": "\n    public suspend inline operator fun <reified F, reified S> invoke(\n        request: HttpClient.() -> HttpResponse\n    ): NetworkEither<F, S> {\n        val jsonFeature: JsonFeature =\n            checkNotNull(client.feature(JsonFeature)) {"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-8962802358019738116"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: JsonFeature",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 33,
      "offset": 25,
      "length": 11,
      "code": {
        "startLine": 31,
        "length": 11,
        "offset": 101,
        "surroundingCode": "        request: HttpClient.() -> HttpResponse\n    ): NetworkEither<F, S> {\n        val jsonFeature: JsonFeature =\n            checkNotNull(client.feature(JsonFeature)) {\n                \"JsonFeature is missing and it is mandatory\""
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8927512431465484121"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: JsonFeature",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "projects/network/network-core/commonMain/kotlin/com/javiersc/either/network/ktor/NetworkEitherKtor.kt",
      "language": "kotlin",
      "line": 34,
      "offset": 40,
      "length": 11,
      "code": {
        "startLine": 32,
        "length": 11,
        "offset": 108,
        "surroundingCode": "    ): NetworkEither<F, S> {\n        val jsonFeature: JsonFeature =\n            checkNotNull(client.feature(JsonFeature)) {\n                \"JsonFeature is missing and it is mandatory\"\n            }"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-3926692016354374417"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "field",
      "path": "projects/network/network-core/jvmTest/kotlin/TestUtils.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 9,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 33,
        "surroundingCode": "import okio.FileSystem\n\ninternal actual val fileSystem: FileSystem = FileSystem.SYSTEM"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-core.jvmTest",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-8685220619281713083"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Cannot access 'Serializable': it is internal in 'kotlin.io'",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "class",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 45,
      "offset": 1,
      "length": 12,
      "code": {
        "startLine": 43,
        "length": 12,
        "offset": 76,
        "surroundingCode": "): NetworkEither<F, S> = alsoPrettyPrint(tag, serializer(), serializer())\n\n@Serializable\ninternal data class Response<T>(val body: T, val code: Int, val headers: Map<String, List<String>>)\n\nprivate const val LocalError = \"Internet not available\""
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-3066762038070153395"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "This class does not have a constructor",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "class",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 45,
      "offset": 1,
      "length": 12,
      "code": {
        "startLine": 43,
        "length": 12,
        "offset": 76,
        "surroundingCode": "): NetworkEither<F, S> = alsoPrettyPrint(tag, serializer(), serializer())\n\n@Serializable\ninternal data class Response<T>(val body: T, val code: Int, val headers: Map<String, List<String>>)\n\nprivate const val LocalError = \"Internet not available\""
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "3716230639017329747"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: mokoki",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 20,
      "length": 6,
      "code": {
        "startLine": 5,
        "length": 6,
        "offset": 120,
        "surroundingCode": "import com.javiersc.either.network.NetworkEither\nimport com.javiersc.either.network.extensions.fold\nimport com.javiersc.mokoki.extensions.logE\nimport com.javiersc.mokoki.serialization.extensions.logSerializableE\nimport com.javiersc.mokoki.serialization.extensions.logSerializableV"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-2730822736271763676"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: mokoki",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "projects/network/network-logger/commonMain/kotlin/com/javiersc/either/network/logger/NetworkEitherLogger.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 20,
      "length": 6,
      "code": {
        "startLine": 6,
        "length": 6,
        "offset": 114,
        "surroundingCode": "import com.javiersc.either.network.extensions.fold\nimport com.javiersc.mokoki.extensions.logE\nimport com.javiersc.mokoki.serialization.extensions.logSerializableE\nimport com.javiersc.mokoki.serialization.extensions.logSerializableV\nimport kotlinx.serialization.KSerializer"
      }
    }
  ],
  "attributes": {
    "module": "either.projects.network.network-logger.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-2319206165543421855"
}]}